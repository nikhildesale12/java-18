The existing core reflection has three internal mechanisms for invoking methods and constructors. Adding new features to the core reflection may modify all three code paths. Which is costly.

VM native methods
Dynamically generated bytecode stubs
Method handles

This reimplements core reflection with method handles as the underlying reflective mechanism. There is no change to the java.lang.reflect API; solely an implementation change.

P.S We can enable back the old implementation via -Djdk.reflect.useDirectMethodHandle=false.


